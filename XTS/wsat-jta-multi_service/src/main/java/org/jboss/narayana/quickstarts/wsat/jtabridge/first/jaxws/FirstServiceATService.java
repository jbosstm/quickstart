package org.jboss.narayana.quickstarts.wsat.jtabridge.first.jaxws;

import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "FirstServiceATService", targetNamespace = "http://www.jboss.org/narayana/quickstarts/wsat/simple/first")
public class FirstServiceATService extends Service {

    private final static URL FIRSTSERVICEATSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(FirstServiceATService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = FirstServiceATService.class.getResource(".");
            url = new URL(baseUrl, "FirstServiceAT.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'FirstServiceAT.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        FIRSTSERVICEATSERVICE_WSDL_LOCATION = url;
    }

    public FirstServiceATService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FirstServiceATService() {
        super(FIRSTSERVICEATSERVICE_WSDL_LOCATION, new QName(
                "http://www.jboss.org/narayana/quickstarts/wsat/simple/First", "FirstServiceATService"));
    }

    /**
     * 
     * @return returns FirstServiceAT
     */
    @WebEndpoint(name = "FirstServiceAT")
    public FirstServiceAT getFirstServiceAT() {
        return super.getPort(
                new QName("http://www.jboss.org/narayana/quickstarts/wsat/simple/First", "FirstServiceAT"),
                FirstServiceAT.class);
    }

    /**
     * 
     * @param features A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the
     *        <code>features</code> parameter will have their default values.
     * @return returns FirstServiceAT
     */
    @WebEndpoint(name = "FirstServiceAT")
    public FirstServiceAT getFirstServiceAT(WebServiceFeature... features) {
        return super.getPort(
                new QName("http://www.jboss.org/narayana/quickstarts/wsat/simple/First", "FirstServiceAT"),
                FirstServiceAT.class, features);
    }

}