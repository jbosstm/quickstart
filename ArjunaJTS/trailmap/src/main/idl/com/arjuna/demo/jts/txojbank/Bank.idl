#include <CosTransactions.idl>

module com {
    module arjuna {
        module demo {
            module jts {
                module txojbank {
                    /*
                        The <CODE>Account</CODE> interface provides access to the bpank accounts current state within
                        the scope of the transaction identified by the <CODE>Control</CODE> object.
                     */
                    interface Account : CosTransactions::TransactionalObject
                    {
                        /*
                            Determine the current account balance within the scope of the transaction identified by
                            ctrl.
                         */
                        float balance();

                        /*
                            Credit the account balance within the scope of the transaction "ctrl" with the amount
                            "value".
                         */
                        void credit( in float value );

                        /*
                            Debit the account balance within the scope of the transaction "ctrl" with the amount
                            "value".
                         */
                        void debit( in float value );
                    };

                    /*
                        If the account does not exist.
                     */
                    exception NotExistingAccount
                    { };

                    /*
                        The <CODE>Bank</CODE> object allows a user to create a bank account and to access currently
                        exisiting bank accounts.
                     */
                    interface Bank : CosTransactions::TransactionalObject
                    {
                        /*
                            Create and return a handle on a new bank account with the name "name".
                         */
                        Account create_account( in string name );

                        /*
                            Get access to the account identified by the name "name".
                         */
                        Account get_account( in string name )
                            raises( NotExistingAccount );
                    };
                };
            };
        };
    };
};